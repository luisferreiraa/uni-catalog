{"numFailedTestSuites":2,"numFailedTests":0,"numPassedTestSuites":1,"numPassedTests":7,"numPendingTestSuites":0,"numPendingTests":0,"numRuntimeErrorTestSuites":2,"numTodoTests":0,"numTotalTestSuites":3,"numTotalTests":7,"openHandles":[],"snapshot":{"added":0,"didUpdate":false,"failure":false,"filesAdded":0,"filesRemoved":0,"filesRemovedList":[],"filesUnmatched":0,"filesUpdated":0,"matched":0,"total":0,"unchecked":0,"uncheckedKeysByFile":[],"unmatched":0,"updated":0},"startTime":1754045924538,"success":false,"testResults":[{"assertionResults":[{"ancestorTitles":["isValidFieldValue"],"duration":7,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"isValidFieldValue should return false or undefined, null, or empty string","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1754045927529,"status":"passed","title":"should return false or undefined, null, or empty string"},{"ancestorTitles":["isValidFieldValue"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"isValidFieldValue should return true for valid non-empty strings","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1754045927537,"status":"passed","title":"should return true for valid non-empty strings"},{"ancestorTitles":["isValidFieldValue"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"isValidFieldValue should handle \"não\" and similar values correctly for optional fields","invocations":1,"location":null,"numPassingAsserts":6,"retryReasons":[],"startAt":1754045927537,"status":"passed","title":"should handle \"não\" and similar values correctly for optional fields"},{"ancestorTitles":["isValidFieldValue"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"isValidFieldValue shouuld handle \"não\" and similar values correctly for mandatory fields","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1754045927539,"status":"passed","title":"shouuld handle \"não\" and similar values correctly for mandatory fields"},{"ancestorTitles":["isValidFieldValue"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"isValidFieldValue should return true if any item in an array is valid","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1754045927540,"status":"passed","title":"should return true if any item in an array is valid"},{"ancestorTitles":["isValidFieldValue"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"isValidFieldValue should return true if any value in an object is valid","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1754045927541,"status":"passed","title":"should return true if any value in an object is valid"},{"ancestorTitles":["isValidFieldValue"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"isValidFieldValue should handle nested structures","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1754045927541,"status":"passed","title":"should handle nested structures"}],"endTime":1754045927544,"message":"","name":"C:\\Tutoriais\\Next js\\uni-catalog\\src\\__tests__\\utils\\isValidFieldValue.test.ts","startTime":1754045926660,"status":"passed","summary":""},{"assertionResults":[],"coverage":{},"endTime":1754045927860,"message":"  \u001b[1m● \u001b[22mTest suite failed to run\n\n    \u001b[1m\u001b[31mJest encountered an unexpected token\u001b[39m\u001b[22m\n\n    Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.\n\n    Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.\n\n    By default \"node_modules\" folder is ignored by transformers.\n\n    Here's what you can do:\n     • If you are trying to use ECMAScript Modules, see \u001b[4mhttps://jestjs.io/docs/ecmascript-modules\u001b[24m for how to enable it.\n     • If you are trying to use TypeScript, see \u001b[4mhttps://jestjs.io/docs/getting-started#using-typescript\u001b[24m\n     • To have some of your \"node_modules\" files transformed, you can specify a custom \u001b[1m\"transformIgnorePatterns\"\u001b[22m in your config.\n     • If you need a custom transformation, specify a \u001b[1m\"transform\"\u001b[22m option in your config.\n     • If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the \u001b[1m\"moduleNameMapper\"\u001b[22m config option.\n\n    You'll find more details and examples of these config options in the docs:\n    \u001b[36mhttps://jestjs.io/docs/configuration\u001b[39m\n    For information about custom transformations, see:\n    \u001b[36mhttps://jestjs.io/docs/code-transformation\u001b[39m\n\n    \u001b[1m\u001b[31mDetails:\u001b[39m\u001b[22m\n\n    C:\\Tutoriais\\Next js\\uni-catalog\\src\\__tests__\\app\\page.test.tsx:30\n            (0, react_1.render)(<page_1.default />);\n                                ^\n\n    SyntaxError: Unexpected token '<'\n\n      \u001b[2mat Runtime.createScriptFromCode (\u001b[22mnode_modules/jest-runtime/build/index.js\u001b[2m:1316:40)\u001b[22m\n","name":"C:\\Tutoriais\\Next js\\uni-catalog\\src\\__tests__\\app\\page.test.tsx","startTime":1754045927860,"status":"failed","summary":""},{"assertionResults":[],"coverage":{},"endTime":1754045927860,"message":"  \u001b[1m● \u001b[22mTest suite failed to run\n\n    ReferenceError: Cannot access 'mockChatCompletionsCreate' before initialization\n\n    \u001b[0m \u001b[90m 23 |\u001b[39m jest\u001b[33m.\u001b[39mmock(\u001b[32m\"openai\"\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\n     \u001b[90m 24 |\u001b[39m     \u001b[90m// Atribui a função mockada aqui, garantindo que está inicializada quando o mock é criado\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 25 |\u001b[39m     mockChatCompletionsCreate \u001b[33m=\u001b[39m jest\u001b[33m.\u001b[39mfn()\n     \u001b[90m    |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 26 |\u001b[39m     \u001b[36mreturn\u001b[39m jest\u001b[33m.\u001b[39mfn(() \u001b[33m=>\u001b[39m ({\n     \u001b[90m 27 |\u001b[39m         chat\u001b[33m:\u001b[39m {\n     \u001b[90m 28 |\u001b[39m             completions\u001b[33m:\u001b[39m {\u001b[0m\n\n      \u001b[2mat \u001b[22m\u001b[0m\u001b[36msrc/__tests__/api/catalog/route.test.ts\u001b[39m\u001b[0m\u001b[2m:25:30\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22msrc/app/api/uni-dialog/route.ts\u001b[2m:2:1)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[0m\u001b[36msrc/__tests__/api/catalog/route.test.ts\u001b[39m\u001b[0m\u001b[2m:1:1)\u001b[22m\n","name":"C:\\Tutoriais\\Next js\\uni-catalog\\src\\__tests__\\api\\catalog\\route.test.ts","startTime":1754045927860,"status":"failed","summary":""}],"wasInterrupted":false}
